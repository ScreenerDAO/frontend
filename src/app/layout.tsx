import ICompanyEthData from "@/lib/types/ICompanyEthData"
import IEvent from "@/lib/types/IEvent"
import { ApolloClient, InMemoryCache, gql } from "@apollo/client"
import Providers from "./providers"

export const metadata = {
    title: 'ScreenerDAO',
    description: 'Generated by create next app',
    icons: {
        icon: '/images/screener2.png'
    }
}

const query = gql`
    query Data {
        companies(orderBy: iId) {
            id
            name
            ticker
            dataHash
        },
        events(orderBy: blockTimestamp, orderDirection: desc, first: 10) {
            id
            companyId
            blockTimestamp
            eventType
        }
    }
`

const client = new ApolloClient({
    uri: process.env.THEGRAPH_API_URL,
    cache: new InMemoryCache()
})

export interface IRootLayoutParams {
    companies: ICompanyEthData[]
    events: IEvent[]
}

export default async function RootLayout({
    params,
    children,
}: {
    params: IRootLayoutParams
    children: React.ReactNode
}) {
    const thegraphData: IRootLayoutParams = (await client.query({ query: query })).data
    params.companies = thegraphData.companies
    params.events = thegraphData.events

    return (
        <html lang="en">
            <head>
                <link rel='preconnect' href='https://fonts.googleapis.com' />
                <link rel='preconnect' href='https://fonts.gstatic.com' />
                <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap' />
                <link rel='apple-touch-icon' sizes='180x180' href='/images/apple-touch-icon.png' />
                <link rel='shortcut icon' href='/images/screener2.png' />
            </head>

            <body>
                <Providers companies={params.companies}>
                    {children}
                </Providers>
            </body>
        </html>
    )
}
